Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> NAME EQUALS expression
Rule 2     statement -> expression
Rule 3     expression -> expression PLUS expression
Rule 4     expression -> expression MINUS expression
Rule 5     expression -> expression TIMES expression
Rule 6     expression -> expression DIVIDE expression
Rule 7     expression -> expression POW expression
Rule 8     expression -> expression MOD expression
Rule 9     expression -> FUNCTION LPAREN expression RPAREN
Rule 10    expression -> MINUS expression
Rule 11    expression -> LPAREN expression RPAREN
Rule 12    expression -> SET
Rule 13    expression -> expression UNION expression
Rule 14    expression -> expression INTERSECTION expression
Rule 15    expression -> NUMBER
Rule 16    expression -> DOUBLE
Rule 17    expression -> NAME

Terminals, with rules where they appear

DIVIDE               : 6
DOUBLE               : 16
EQUALS               : 1
FUNCTION             : 9
INTERSECTION         : 14
LPAREN               : 9 11
MINUS                : 4 10
MOD                  : 8
NAME                 : 1 17
NUMBER               : 15
PLUS                 : 3
POW                  : 7
RPAREN               : 9 11
SET                  : 12
TIMES                : 5
UNION                : 13
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 3 4 4 5 5 6 6 7 7 8 8 9 10 11 13 13 14 14
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . NAME EQUALS expression
    (2) statement -> . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    NAME            shift and go to state 2
    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9

    statement                      shift and go to state 1
    expression                     shift and go to state 3

state 1

    (0) S' -> statement .



state 2

    (1) statement -> NAME . EQUALS expression
    (17) expression -> NAME .

    EQUALS          shift and go to state 10
    PLUS            reduce using rule 17 (expression -> NAME .)
    MINUS           reduce using rule 17 (expression -> NAME .)
    TIMES           reduce using rule 17 (expression -> NAME .)
    DIVIDE          reduce using rule 17 (expression -> NAME .)
    POW             reduce using rule 17 (expression -> NAME .)
    MOD             reduce using rule 17 (expression -> NAME .)
    UNION           reduce using rule 17 (expression -> NAME .)
    INTERSECTION    reduce using rule 17 (expression -> NAME .)
    $end            reduce using rule 17 (expression -> NAME .)


state 3

    (2) statement -> expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    $end            reduce using rule 2 (statement -> expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18


state 4

    (10) expression -> MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 19

state 5

    (9) expression -> FUNCTION . LPAREN expression RPAREN

    LPAREN          shift and go to state 21


state 6

    (11) expression -> LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 22

state 7

    (12) expression -> SET .

    PLUS            reduce using rule 12 (expression -> SET .)
    MINUS           reduce using rule 12 (expression -> SET .)
    TIMES           reduce using rule 12 (expression -> SET .)
    DIVIDE          reduce using rule 12 (expression -> SET .)
    POW             reduce using rule 12 (expression -> SET .)
    MOD             reduce using rule 12 (expression -> SET .)
    UNION           reduce using rule 12 (expression -> SET .)
    INTERSECTION    reduce using rule 12 (expression -> SET .)
    $end            reduce using rule 12 (expression -> SET .)
    RPAREN          reduce using rule 12 (expression -> SET .)


state 8

    (15) expression -> NUMBER .

    PLUS            reduce using rule 15 (expression -> NUMBER .)
    MINUS           reduce using rule 15 (expression -> NUMBER .)
    TIMES           reduce using rule 15 (expression -> NUMBER .)
    DIVIDE          reduce using rule 15 (expression -> NUMBER .)
    POW             reduce using rule 15 (expression -> NUMBER .)
    MOD             reduce using rule 15 (expression -> NUMBER .)
    UNION           reduce using rule 15 (expression -> NUMBER .)
    INTERSECTION    reduce using rule 15 (expression -> NUMBER .)
    $end            reduce using rule 15 (expression -> NUMBER .)
    RPAREN          reduce using rule 15 (expression -> NUMBER .)


state 9

    (16) expression -> DOUBLE .

    PLUS            reduce using rule 16 (expression -> DOUBLE .)
    MINUS           reduce using rule 16 (expression -> DOUBLE .)
    TIMES           reduce using rule 16 (expression -> DOUBLE .)
    DIVIDE          reduce using rule 16 (expression -> DOUBLE .)
    POW             reduce using rule 16 (expression -> DOUBLE .)
    MOD             reduce using rule 16 (expression -> DOUBLE .)
    UNION           reduce using rule 16 (expression -> DOUBLE .)
    INTERSECTION    reduce using rule 16 (expression -> DOUBLE .)
    $end            reduce using rule 16 (expression -> DOUBLE .)
    RPAREN          reduce using rule 16 (expression -> DOUBLE .)


state 10

    (1) statement -> NAME EQUALS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 23

state 11

    (3) expression -> expression PLUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 24

state 12

    (4) expression -> expression MINUS . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 25

state 13

    (5) expression -> expression TIMES . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 26

state 14

    (6) expression -> expression DIVIDE . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 27

state 15

    (7) expression -> expression POW . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 28

state 16

    (8) expression -> expression MOD . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 29

state 17

    (13) expression -> expression UNION . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 30

state 18

    (14) expression -> expression INTERSECTION . expression
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 31

state 19

    (10) expression -> MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 10 (expression -> MINUS expression .)
    MINUS           reduce using rule 10 (expression -> MINUS expression .)
    TIMES           reduce using rule 10 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 10 (expression -> MINUS expression .)
    UNION           reduce using rule 10 (expression -> MINUS expression .)
    INTERSECTION    reduce using rule 10 (expression -> MINUS expression .)
    $end            reduce using rule 10 (expression -> MINUS expression .)
    RPAREN          reduce using rule 10 (expression -> MINUS expression .)
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! POW             [ reduce using rule 10 (expression -> MINUS expression .) ]
  ! MOD             [ reduce using rule 10 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 20

    (17) expression -> NAME .

    PLUS            reduce using rule 17 (expression -> NAME .)
    MINUS           reduce using rule 17 (expression -> NAME .)
    TIMES           reduce using rule 17 (expression -> NAME .)
    DIVIDE          reduce using rule 17 (expression -> NAME .)
    POW             reduce using rule 17 (expression -> NAME .)
    MOD             reduce using rule 17 (expression -> NAME .)
    UNION           reduce using rule 17 (expression -> NAME .)
    INTERSECTION    reduce using rule 17 (expression -> NAME .)
    $end            reduce using rule 17 (expression -> NAME .)
    RPAREN          reduce using rule 17 (expression -> NAME .)


state 21

    (9) expression -> FUNCTION LPAREN . expression RPAREN
    (3) expression -> . expression PLUS expression
    (4) expression -> . expression MINUS expression
    (5) expression -> . expression TIMES expression
    (6) expression -> . expression DIVIDE expression
    (7) expression -> . expression POW expression
    (8) expression -> . expression MOD expression
    (9) expression -> . FUNCTION LPAREN expression RPAREN
    (10) expression -> . MINUS expression
    (11) expression -> . LPAREN expression RPAREN
    (12) expression -> . SET
    (13) expression -> . expression UNION expression
    (14) expression -> . expression INTERSECTION expression
    (15) expression -> . NUMBER
    (16) expression -> . DOUBLE
    (17) expression -> . NAME

    FUNCTION        shift and go to state 5
    MINUS           shift and go to state 4
    LPAREN          shift and go to state 6
    SET             shift and go to state 7
    NUMBER          shift and go to state 8
    DOUBLE          shift and go to state 9
    NAME            shift and go to state 20

    expression                     shift and go to state 32

state 22

    (11) expression -> LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    RPAREN          shift and go to state 33
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18


state 23

    (1) statement -> NAME EQUALS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    $end            reduce using rule 1 (statement -> NAME EQUALS expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18


state 24

    (3) expression -> expression PLUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 3 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 3 (expression -> expression PLUS expression .)
    UNION           reduce using rule 3 (expression -> expression PLUS expression .)
    INTERSECTION    reduce using rule 3 (expression -> expression PLUS expression .)
    $end            reduce using rule 3 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 3 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! TIMES           [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! POW             [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 3 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 25

    (4) expression -> expression MINUS expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 4 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 4 (expression -> expression MINUS expression .)
    UNION           reduce using rule 4 (expression -> expression MINUS expression .)
    INTERSECTION    reduce using rule 4 (expression -> expression MINUS expression .)
    $end            reduce using rule 4 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 4 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! TIMES           [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! POW             [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 4 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 26

    (5) expression -> expression TIMES expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 5 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 5 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 5 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 5 (expression -> expression TIMES expression .)
    UNION           reduce using rule 5 (expression -> expression TIMES expression .)
    INTERSECTION    reduce using rule 5 (expression -> expression TIMES expression .)
    $end            reduce using rule 5 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 5 (expression -> expression TIMES expression .)
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! POW             [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! MOD             [ reduce using rule 5 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 27

    (6) expression -> expression DIVIDE expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 6 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 6 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 6 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 6 (expression -> expression DIVIDE expression .)
    UNION           reduce using rule 6 (expression -> expression DIVIDE expression .)
    INTERSECTION    reduce using rule 6 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 6 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 6 (expression -> expression DIVIDE expression .)
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! POW             [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! MOD             [ reduce using rule 6 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 28

    (7) expression -> expression POW expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 7 (expression -> expression POW expression .)
    MINUS           reduce using rule 7 (expression -> expression POW expression .)
    TIMES           reduce using rule 7 (expression -> expression POW expression .)
    DIVIDE          reduce using rule 7 (expression -> expression POW expression .)
    UNION           reduce using rule 7 (expression -> expression POW expression .)
    INTERSECTION    reduce using rule 7 (expression -> expression POW expression .)
    $end            reduce using rule 7 (expression -> expression POW expression .)
    RPAREN          reduce using rule 7 (expression -> expression POW expression .)
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! POW             [ reduce using rule 7 (expression -> expression POW expression .) ]
  ! MOD             [ reduce using rule 7 (expression -> expression POW expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 29

    (8) expression -> expression MOD expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    PLUS            reduce using rule 8 (expression -> expression MOD expression .)
    MINUS           reduce using rule 8 (expression -> expression MOD expression .)
    TIMES           reduce using rule 8 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 8 (expression -> expression MOD expression .)
    UNION           reduce using rule 8 (expression -> expression MOD expression .)
    INTERSECTION    reduce using rule 8 (expression -> expression MOD expression .)
    $end            reduce using rule 8 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 8 (expression -> expression MOD expression .)
    POW             shift and go to state 15
    MOD             shift and go to state 16

  ! POW             [ reduce using rule 8 (expression -> expression MOD expression .) ]
  ! MOD             [ reduce using rule 8 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 11 ]
  ! MINUS           [ shift and go to state 12 ]
  ! TIMES           [ shift and go to state 13 ]
  ! DIVIDE          [ shift and go to state 14 ]
  ! UNION           [ shift and go to state 17 ]
  ! INTERSECTION    [ shift and go to state 18 ]


state 30

    (13) expression -> expression UNION expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECTION resolved as shift
    $end            reduce using rule 13 (expression -> expression UNION expression .)
    RPAREN          reduce using rule 13 (expression -> expression UNION expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18

  ! PLUS            [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! MINUS           [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! TIMES           [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! POW             [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! MOD             [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! UNION           [ reduce using rule 13 (expression -> expression UNION expression .) ]
  ! INTERSECTION    [ reduce using rule 13 (expression -> expression UNION expression .) ]


state 31

    (14) expression -> expression INTERSECTION expression .
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for UNION resolved as shift
  ! shift/reduce conflict for INTERSECTION resolved as shift
    $end            reduce using rule 14 (expression -> expression INTERSECTION expression .)
    RPAREN          reduce using rule 14 (expression -> expression INTERSECTION expression .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18

  ! PLUS            [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! TIMES           [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! POW             [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! UNION           [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]
  ! INTERSECTION    [ reduce using rule 14 (expression -> expression INTERSECTION expression .) ]


state 32

    (9) expression -> FUNCTION LPAREN expression . RPAREN
    (3) expression -> expression . PLUS expression
    (4) expression -> expression . MINUS expression
    (5) expression -> expression . TIMES expression
    (6) expression -> expression . DIVIDE expression
    (7) expression -> expression . POW expression
    (8) expression -> expression . MOD expression
    (13) expression -> expression . UNION expression
    (14) expression -> expression . INTERSECTION expression

    RPAREN          shift and go to state 34
    PLUS            shift and go to state 11
    MINUS           shift and go to state 12
    TIMES           shift and go to state 13
    DIVIDE          shift and go to state 14
    POW             shift and go to state 15
    MOD             shift and go to state 16
    UNION           shift and go to state 17
    INTERSECTION    shift and go to state 18


state 33

    (11) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    UNION           reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    INTERSECTION    reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 11 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 11 (expression -> LPAREN expression RPAREN .)


state 34

    (9) expression -> FUNCTION LPAREN expression RPAREN .

    PLUS            reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    MINUS           reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    TIMES           reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    POW             reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    MOD             reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    UNION           reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    INTERSECTION    reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    $end            reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)
    RPAREN          reduce using rule 9 (expression -> FUNCTION LPAREN expression RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 30 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 30 resolved as shift
WARNING: shift/reduce conflict for POW in state 30 resolved as shift
WARNING: shift/reduce conflict for MOD in state 30 resolved as shift
WARNING: shift/reduce conflict for UNION in state 30 resolved as shift
WARNING: shift/reduce conflict for INTERSECTION in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 31 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 31 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 31 resolved as shift
WARNING: shift/reduce conflict for POW in state 31 resolved as shift
WARNING: shift/reduce conflict for MOD in state 31 resolved as shift
WARNING: shift/reduce conflict for UNION in state 31 resolved as shift
WARNING: shift/reduce conflict for INTERSECTION in state 31 resolved as shift
