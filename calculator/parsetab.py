
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSFUNCTIONrightPOWMODDIVIDE DOUBLE EQUALS FUNCTION INTERSECTION LPAREN MINUS MOD NAME NUMBER PLUS POW RPAREN SET TIMES UNIONstatement : NAME EQUALS expressionstatement : expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression POW expressionexpression : expression MOD expressionexpression : FUNCTION LPAREN expression RPARENexpression : MINUS expression %prec UMINUSexpression : LPAREN expression RPARENexpression : SETexpression : expression UNION expressionexpression : expression INTERSECTION expressionexpression : NUMBER\n                  | DOUBLEexpression : NAME'
    
_lr_action_items = {'NAME':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[2,20,20,20,20,20,20,20,20,20,20,20,20,]),'FUNCTION':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'MINUS':([0,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,],[4,-17,12,4,4,-12,-15,-16,4,4,4,4,4,4,4,4,4,-10,-17,4,12,12,-3,-4,-5,-6,-7,-8,12,12,12,-11,-9,]),'LPAREN':([0,4,5,6,10,11,12,13,14,15,16,17,18,21,],[6,6,21,6,6,6,6,6,6,6,6,6,6,6,]),'SET':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'NUMBER':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'DOUBLE':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'$end':([1,2,3,7,8,9,19,20,23,24,25,26,27,28,29,30,31,33,34,],[0,-17,-2,-12,-15,-16,-10,-17,-1,-3,-4,-5,-6,-7,-8,-13,-14,-11,-9,]),'EQUALS':([2,],[10,]),'PLUS':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,11,-12,-15,-16,-10,-17,11,11,-3,-4,-5,-6,-7,-8,11,11,11,-11,-9,]),'TIMES':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,13,-12,-15,-16,-10,-17,13,13,13,13,-5,-6,-7,-8,13,13,13,-11,-9,]),'DIVIDE':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,14,-12,-15,-16,-10,-17,14,14,14,14,-5,-6,-7,-8,14,14,14,-11,-9,]),'POW':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,15,-12,-15,-16,15,-17,15,15,15,15,15,15,15,15,15,15,15,-11,-9,]),'MOD':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,16,-12,-15,-16,16,-17,16,16,16,16,16,16,16,16,16,16,16,-11,-9,]),'UNION':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,17,-12,-15,-16,-10,-17,17,17,-3,-4,-5,-6,-7,-8,17,17,17,-11,-9,]),'INTERSECTION':([2,3,7,8,9,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,],[-17,18,-12,-15,-16,-10,-17,18,18,-3,-4,-5,-6,-7,-8,18,18,18,-11,-9,]),'RPAREN':([7,8,9,19,20,22,24,25,26,27,28,29,30,31,32,33,34,],[-12,-15,-16,-10,-17,33,-3,-4,-5,-6,-7,-8,-13,-14,34,-11,-9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,4,6,10,11,12,13,14,15,16,17,18,21,],[3,19,22,23,24,25,26,27,28,29,30,31,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> NAME EQUALS expression','statement',3,'p_statement_assign','calc.py',93),
  ('statement -> expression','statement',1,'p_statement_expr','calc.py',98),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','calc.py',103),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','calc.py',104),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','calc.py',105),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','calc.py',106),
  ('expression -> expression POW expression','expression',3,'p_expression_pow','calc.py',114),
  ('expression -> expression MOD expression','expression',3,'p_expression_mod','calc.py',118),
  ('expression -> FUNCTION LPAREN expression RPAREN','expression',4,'p_function','calc.py',122),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','calc.py',159),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calc.py',163),
  ('expression -> SET','expression',1,'p_expression_set','calc.py',168),
  ('expression -> expression UNION expression','expression',3,'p_expression_union','calc.py',178),
  ('expression -> expression INTERSECTION expression','expression',3,'p_expression_intersection','calc.py',182),
  ('expression -> NUMBER','expression',1,'p_expression_number','calc.py',186),
  ('expression -> DOUBLE','expression',1,'p_expression_number','calc.py',187),
  ('expression -> NAME','expression',1,'p_expression_name','calc.py',192),
]
